<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NSX-T on</title><link>https://srobroek.github.io/categories/nsx-t/</link><description>Recent content in NSX-T on</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright/><lastBuildDate>Fri, 13 Nov 2020 04:16:21 +0000</lastBuildDate><atom:link href="https://srobroek.github.io/categories/nsx-t/index.xml" rel="self" type="application/rss+xml"/><item><title>Manageable micro-segmentation with the consumer-provider architecture</title><link>https://srobroek.github.io/posts/manageable-micro-segmentation-with-the-consumer-provider-architecture/</link><pubDate>Fri, 13 Nov 2020 04:16:21 +0000</pubDate><guid>https://srobroek.github.io/posts/manageable-micro-segmentation-with-the-consumer-provider-architecture/</guid><description>This blogpost discusses how the consumer-provider microsegmentation model works, its strengths and weaknesses, and why you might want to consider using this for your future micro-segmentation strategies.</description></item><item><title>VCF Microsegmentation, the right way</title><link>https://srobroek.github.io/posts/vcf-microsegmentation-right-way/</link><pubDate>Wed, 28 Oct 2020 17:43:17 +0000</pubDate><guid>https://srobroek.github.io/posts/vcf-microsegmentation-right-way/</guid><description>In some recent engagements i&amp;rsquo;ve been involved in getting my customers started with a microsegmentations strategy, and one of the more obvious requests from people new to microsegmentation is to start with their infrastructure.</description></item><item><title>Building a NSX-T nested lab part 2</title><link>https://srobroek.github.io/posts/building-a-nsx-t-nested-lab-part-2-electric-boogaloo-part-1/</link><pubDate>Fri, 25 May 2018 12:04:10 +0000</pubDate><guid>https://srobroek.github.io/posts/building-a-nsx-t-nested-lab-part-2-electric-boogaloo-part-1/</guid><description>if you&amp;rsquo;ve read my previous blog post about NSX-T, you should know the basics of what NSX-T does and why it&amp;rsquo;s the best thing since mankind invented rocket surgery. In this post we&amp;rsquo;ll try to give you a brief overview of the steps to take to deploy NSX-T in your lab environment the easy way.</description></item><item><title>Building a NSX-T nested lab with Eve-NG, virtualised switches, BGP, and the kitchen sink attached.</title><link>https://srobroek.github.io/posts/building-a-nsx-t-nested-lab/</link><pubDate>Sat, 29 Apr 2017 12:23:52 +0000</pubDate><guid>https://srobroek.github.io/posts/building-a-nsx-t-nested-lab/</guid><description>Since my last tweet and blogpost on a bug in NSX-T when deploying on a nested ESXi host , i&amp;rsquo;ve had a few requests from people to describe the actual lab setup used, the procedure and a quick-and-dirty guide to get started with NSX-T on vSphere.</description></item><item><title>NSX-T Nested ESXi host preparation fails.</title><link>https://srobroek.github.io/posts/nsx-t-esxi-host-preparation-fails-errno-1-operation-not-permitted-it-is-not-safe-to-continue/</link><pubDate>Fri, 21 Apr 2017 14:06:34 +0000</pubDate><guid>https://srobroek.github.io/posts/nsx-t-esxi-host-preparation-fails-errno-1-operation-not-permitted-it-is-not-safe-to-continue/</guid><description>As today was a lab day for the first time in a long while, i decided to finally get around to finishing my NSX-T nested lab.
So after deploying the manager and controller cluster, the time comes to prepare the ESXi hosts.</description></item></channel></rss>